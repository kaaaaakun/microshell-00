srcs/builtin/env.c:		write_env(status->env);
srcs/builtin/execve.c:	list = status->stack->cmdlist;
srcs/builtin/execve.c:	path = check_access(status->stack->cmdlist->content, status);
srcs/builtin/execve.c:	if (status->pipe == 0)
srcs/builtin/execve.c:	status->exec_count++;
srcs/builtin/execve.c:	status->pid = pid;
srcs/builtin/execve.c:// 	if (status->pipe == 0)
srcs/builtin/execve.c:// 	status->exec_count++;
srcs/builtin/execve.c:// 	status->pid = pid;
srcs/builtin/exit.c:		status->exit_status = ft_atoi(list->next->content) % 256;
srcs/builtin/exit.c:		exit(status->exit_status);
srcs/builtin/export.c:		print_export_env(status->env);
srcs/builtin/export.c:						push_back(&status->env, no_left_but_plus(ft_strdup(list->content)));
srcs/builtin/export.c:						push_back(&status->env, ft_strdup(list->content));
srcs/builtin/unset.c:	env = status->env;
srcs/debug.c:	data = status->stack;
srcs/debug.c:	data = status->stack;
srcs/debug.c:		lstiter(status->env, print_data);//listの中身を表示
srcs/lexer_panda/lexer_panda.c:		exit_nbr = ft_itoa(status->exit_status);
srcs/lexer_panda/lexer_panda.c:	line = status->line;
srcs/lexer_panda/lexer_panda.c:	status->line = line;
srcs/lexer_panda/lexer_panda.c:	data = status->stack;
srcs/lexer_panda/lexer_panda.c:	data = status->stack;
srcs/lexer_panda/lexer_panda.c:			status->pid = 1;
srcs/lexer_panda/lexer_panda.c:			check_command(status, status->stack);
srcs/lexer_panda/lexer_panda.c:		status->pid = pid;
srcs/lexer_panda/lexer_panda.c:	data = status->stack;
srcs/lexer_panda/lexer_panda.c:		status->error = -1;
srcs/lexer_panda/lexer_panda.c:	status->pipe = check_and_count_pipe(status, line);
srcs/lexer_panda/lexer_panda.c:	d_printf("\n{pipe;%d}\n",status->pipe);
srcs/lexer_panda/make_env_list.c:	status->env = envlist;
srcs/lexer_panda/make_env_list.c:	env = status->env;
srcs/lexer_panda/make_env_list.c:	//status->error
srcs/lexer_panda/make_env_list.c:	env = status->env;
srcs/lexer_panda/make_env_list.c:	//status->error
srcs/lexer_panda/make_env_list.c:	env = status->env;
srcs/lexer_panda/make_env_list.c:	//status->error
srcs/lexer_panda/make_list.c:	dup2(status->cpy_stdin, 0);
srcs/lexer_panda/make_list.c:	close(status->cpy_stdin);
srcs/lexer_panda/make_list.c:	status->cpy_stdin = cpy_stdin;
srcs/lexer_panda/make_list.c://		status->error == 1;
srcs/lexer_panda/make_stack.c:	if (status->stack == NULL)
srcs/lexer_panda/make_stack.c:		status->stack = data;
srcs/list.c:	data = status->stack;
srcs/list.c:	status->stack = NULL;
srcs/main.c:	d_printf("[wait;%d]", status->pipe);
srcs/main.c:	if (status->pipe == 0)
srcs/main.c:	while (i <= status->pipe)
srcs/main.c:	waitpid(status->pid, &exit_status, 0);
srcs/main.c:	d_printf("[check_line:%d]", status->exec_count);
srcs/main.c:	status->exec_count = 0;
srcs/main.c:	status->cpy_stdin = dup(0);
srcs/main.c:	if (status->error)
srcs/main.c:	if (status->pipe != 0)
srcs/main.c:			status->pid = 1;
srcs/main.c:			check_command(status, status->stack);
srcs/main.c:		check_command(status, status->stack);
srcs/main.c:	dup2(status->cpy_stdin, 0);
srcs/main.c:	status->pid = 0;
srcs/main.c:	status->pipe = 0;
srcs/main.c:	status->pre_pipe1 = -1;
srcs/main.c:	status->pre_pipe0 = -1;
srcs/main.c:	status->error = 0;
srcs/main.c:	status->line = NULL;
srcs/main.c:	status->cpy_stdin = -1;
srcs/main.c:	status->exec_count = 0;
srcs/main.c:		status->error = 0;
srcs/main.c:		status->stack = NULL;
srcs/panda_to_builtin.c:	if (status->pid == 1)
srcs/pino.c:	stack = status->stack;
srcs/pino.c:	ft_printf("[check_line:%d]", status->exec_count);
srcs/pino.c:	status->exec_count = 0;
srcs/pino.c:	ft_printf("[wait;%d]", info_status->exec_count);
srcs/pino.c:	while (i < info_status->exec_count)
srcs/pino.c:	waitpid(info_status->pid, &status, 0);
srcs/pino.c:	status->stack->outputlist = NULL;
srcs/pino.c:	status->stack->appendlist = NULL;
srcs/pino.c:	status->stack->inputlist = NULL;
srcs/pino.c:	status->stack->heredoclist = NULL;
srcs/pino.c:	status->stack->cmdlist = NULL;
srcs/pino.c:	status->stack->next = NULL;
srcs/pino.c:	status->exec_count = 0;
srcs/pino.c:	status->error = 0;

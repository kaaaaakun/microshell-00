
ACCESS(2)                   BSD System Calls Manual                  ACCESS(2)

NNAAMMEE
     aacccceessss, ffaacccceessssaatt -- check accessibility of a file

SSYYNNOOPPSSIISS
     ##iinncclluuddee <<uunniissttdd..hh>>

     _i_n_t
     aacccceessss(_c_o_n_s_t _c_h_a_r _*_p_a_t_h, _i_n_t _m_o_d_e);

     _i_n_t
     ffaacccceessssaatt(_i_n_t _f_d, _c_o_n_s_t _c_h_a_r _*_p_a_t_h, _i_n_t _m_o_d_e, _i_n_t _f_l_a_g);

DDEESSCCRRIIPPTTIIOONN
     The aacccceessss() system call checks the accessibility of the file named by
     the _p_a_t_h argument for the access permissions indicated by the _m_o_d_e argu-
     ment.  The value of _m_o_d_e is either the bitwise-inclusive OR of the access
     permissions to be checked (R_OK for read permission, W_OK for write per-
     mission, and X_OK for execute/search permission), or the existence test
     (F_OK).

     For additional information, see the _F_i_l_e _A_c_c_e_s_s _P_e_r_m_i_s_s_i_o_n section of
     intro(2).

     The aacccceessss() system call uses the real user ID in place of the effective
     user ID, the real group ID in place of the effective group ID, and the
     rest of the group access list.

     The ffaacccceessssaatt() system call is equivalent to aacccceessss() except in the case
     where _p_a_t_h specifies a relative path.  In this case the file whose acces-
     sibility is to be determined is located relative to the directory associ-
     ated with the file descriptor _f_d instead of the current working direc-
     tory.  If ffaacccceessssaatt() is passed the special value AT_FDCWD in the _f_d
     parameter, the current working directory is used and the behavior is
     identical to a call to aacccceessss().  Values for _f_l_a_g are constructed by a
     bitwise-inclusive OR of flags from the following list, defined in
     <_f_c_n_t_l_._h>:

     AT_EACCESS
             The checks for accessibility are performed using the effective
             user and group IDs instead of the real user and group ID as
             required in a call to aacccceessss().

     Even if a process has appropriate privileges and indicates success for
     X_OK, the file may not actually have execute permission bits set.  Like-
     wise for R_OK and W_OK.

RREETTUURRNN VVAALLUUEESS
     Upon successful completion, the value 0 is returned; otherwise the
     value -1 is returned and the global variable _e_r_r_n_o is set to indicate the
     error.

EERRRROORRSS
     aacccceessss() or ffaacccceessssaatt() will fail if:

     [EINVAL]           The value of the _m_o_d_e argument is invalid.

     [ENOTDIR]          A component of the path prefix is not a directory.

     [ENAMETOOLONG]     A component of a pathname exceeded {NAME_MAX} charac-
                        ters, or an entire path name exceeded {PATH_MAX} char-
                        acters.

     [ENOENT]           The named file does not exist.

     [ELOOP]            Too many symbolic links were encountered in translat-
                        ing the pathname.

     [EROFS]            Write access is requested for a file on a read-only
                        file system.

     [ETXTBSY]          Write access is requested for a pure procedure (shared
                        text) file presently being executed.

     [EACCES]           Permission bits of the file mode do not permit the
                        requested access, or search permission is denied on a
                        component of the path prefix.

     [EFAULT]           The _p_a_t_h argument points outside the process's allo-
                        cated address space.

     [EIO]              An I/O error occurred while reading from or writing to
                        the file system.

     Also, the ffaacccceessssaatt() system call may fail if:

     [EBADF]            The _p_a_t_h argument does not specify an absolute path
                        and the _f_d argument is neither AT_FDCWD nor a valid
                        file descriptor.

     [EINVAL]           The value of the _f_l_a_g argument is not valid.

     [ENOTDIR]          The _p_a_t_h argument is not an absolute path and _f_d is
                        neither AT_FDCWD nor a file descriptor associated with
                        a directory.

SSEEEE AALLSSOO
     chmod(2), intro(2), stat(2)

SSTTAANNDDAARRDDSS
     The aacccceessss() system call is expected to conform to ISO/IEC 9945-1:1990
     (``POSIX.1'').  The ffaacccceessssaatt() system call is expected to conform to
     POSIX.1-2008 .

HHIISSTTOORRYY
     The aacccceessss() function appeared in Version 7 AT&T UNIX.

SSEECCUURRIITTYY CCOONNSSIIDDEERRAATTIIOONNSS
     The result of aacccceessss() should not be used to make an actual access con-
     trol decision, since its response, even if correct at the moment it is
     formed, may be outdated at the time you act on it.  aacccceessss() results
     should only be used to pre-flight, such as when configuring user inter-
     face elements or for optimization purposes.  The actual access control
     decision should be made by attempting to execute the relevant system call
     while holding the applicable credentials, and properly handling any
     resulting errors; and this must be done even though aacccceessss() may have
     predicted success.

     Additionally, set-user-ID and set-group-ID applications should restore
     the effective user or group ID, and perform actions directly rather than
     use aacccceessss() to simulate access checks for the real user or group ID.

BSD                           September 15, 2014                           BSD
